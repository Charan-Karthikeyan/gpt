(define (domain ring)
  (:model (:dynamics :non-deterministic) (:feedback :null))
  (:types MARKER WINDOW)
  (:functions (next   WINDOW WINDOW)
              (prev   WINDOW WINDOW)
              (closed WINDOW :integer[1,3])
              (locked WINDOW :integer[1,3])
              (pos    MARKER WINDOW)
  )
  (:objects win - MARKER)

  (:ramification ram1
    :parameters ?w - WINDOW
    :formula (:or (= (locked ?w) 3) (= (locked ?w) 2) (= (closed ?w) 1))
  )

  (:action move_forward
    :effect (:set (pos win) (next (pos win)))
  )

  (:action move_backward
    :effect (:set (pos win) (prev (pos win)))
  )

  (:action close
    :effect (:set (closed (pos win)) 1)
  )

  (:action lock
    :precondition (= (closed (pos win)) 1)
    :effect (:set (locked (pos win)) 1)
  )
)


(define (problem p2)
  (:domain ring)
  (:objects w1 w2 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w1)
         (:set (prev w2) w1)
         (:set (prev w1) w2)
         (:set (pos win):in { w1 w2 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1))))


(define (problem p3)
  (:domain ring)
  (:objects w1 w2 w3 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w1)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w3)
         (:set (pos win):in { w1 w2 w3 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1))))


(define (problem p4)
  (:domain ring)
  (:objects w1 w2 w3 w4 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w4)
         (:set (next w4) w1)
         (:set (prev w4) w3)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w4)
         (:set (pos win):in { w1 w2 w3 w4 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (closed w4) 3)
         (:set (locked w4) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1)
               (= (locked w4) 1))))


(define (problem p5)
  (:domain ring)
  (:objects w1 w2 w3 w4 w5 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w4)
         (:set (next w4) w5)
         (:set (next w5) w1)
         (:set (prev w5) w4)
         (:set (prev w4) w3)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w5)
         (:set (pos win):in { w1 w2 w3 w4 w5 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (closed w4) 3)
         (:set (closed w5) 3)
         (:set (locked w5) 3)
         (:set (locked w4) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1)
               (= (locked w4) 1)
               (= (locked w5) 1))))


(define (problem p6)
  (:domain ring)
  (:objects w1 w2 w3 w4 w5 w6 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w4)
         (:set (next w4) w5)
         (:set (next w5) w6)
         (:set (next w6) w1)
         (:set (prev w6) w5)
         (:set (prev w5) w4)
         (:set (prev w4) w3)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w6)
         (:set (pos win):in { w1 w2 w3 w4 w5 w6 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (closed w4) 3)
         (:set (closed w5) 3)
         (:set (closed w6) 3)
         (:set (locked w6) 3)
         (:set (locked w5) 3)
         (:set (locked w4) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1)
               (= (locked w4) 1)
               (= (locked w5) 1)
               (= (locked w6) 1))))


(define (problem p7)
  (:domain ring)
  (:objects w1 w2 w3 w4 w5 w6 w7 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w4)
         (:set (next w4) w5)
         (:set (next w5) w6)
         (:set (next w6) w7)
         (:set (next w7) w1)
         (:set (prev w7) w6)
         (:set (prev w6) w5)
         (:set (prev w5) w4)
         (:set (prev w4) w3)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w7)
         (:set (pos win):in { w1 w2 w3 w4 w5 w6 w7 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (closed w4) 3)
         (:set (closed w5) 3)
         (:set (closed w6) 3)
         (:set (closed w7) 3)
         (:set (locked w7) 3)
         (:set (locked w6) 3)
         (:set (locked w5) 3)
         (:set (locked w4) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1)
               (= (locked w4) 1)
               (= (locked w5) 1)
               (= (locked w6) 1)
               (= (locked w7) 1))))


(define (problem p8)
  (:domain ring)
  (:objects w1 w2 w3 w4 w5 w6 w7 w8 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w4)
         (:set (next w4) w5)
         (:set (next w5) w6)
         (:set (next w6) w7)
         (:set (next w7) w8)
         (:set (next w8) w1)
         (:set (prev w8) w7)
         (:set (prev w7) w6)
         (:set (prev w6) w5)
         (:set (prev w5) w4)
         (:set (prev w4) w3)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w8)
         (:set (pos win):in { w1 w2 w3 w4 w5 w6 w7 w8 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (closed w4) 3)
         (:set (closed w5) 3)
         (:set (closed w6) 3)
         (:set (closed w7) 3)
         (:set (closed w8) 3)
         (:set (locked w8) 3)
         (:set (locked w7) 3)
         (:set (locked w6) 3)
         (:set (locked w5) 3)
         (:set (locked w4) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1)
               (= (locked w4) 1)
               (= (locked w5) 1)
               (= (locked w6) 1)
               (= (locked w7) 1)
               (= (locked w8) 1))))



(define (problem p9)
  (:domain ring)
  (:objects w1 w2 w3 w4 w5 w6 w7 w8 w9 - WINDOW)
  (:init (:set (next w1) w2)
         (:set (next w2) w3)
         (:set (next w3) w4)
         (:set (next w4) w5)
         (:set (next w5) w6)
         (:set (next w6) w7)
         (:set (next w7) w8)
         (:set (next w8) w9)
         (:set (next w9) w1)
         (:set (prev w9) w8)
         (:set (prev w8) w7)
         (:set (prev w7) w6)
         (:set (prev w6) w5)
         (:set (prev w5) w4)
         (:set (prev w4) w3)
         (:set (prev w3) w2)
         (:set (prev w2) w1)
         (:set (prev w1) w9)
         (:set (pos win):in { w1 w2 w3 w4 w5 w6 w7 w8 w9 })
         (:set (closed w1) 3)
         (:set (closed w2) 3)
         (:set (closed w3) 3)
         (:set (closed w4) 3)
         (:set (closed w5) 3)
         (:set (closed w6) 3)
         (:set (closed w7) 3)
         (:set (closed w8) 3)
         (:set (closed w9) 3)
         (:set (locked w9) 3)
         (:set (locked w8) 3)
         (:set (locked w7) 3)
         (:set (locked w6) 3)
         (:set (locked w5) 3)
         (:set (locked w4) 3)
         (:set (locked w3) 3)
         (:set (locked w2) 3)
         (:set (locked w1) 3))
  (:goal (:and (= (locked w1) 1)
               (= (locked w2) 1)
               (= (locked w3) 1)
               (= (locked w4) 1)
               (= (locked w5) 1)
               (= (locked w6) 1)
               (= (locked w7) 1)
               (= (locked w8) 1)
               (= (locked w9) 1))))
