#ifndef _daeErrors_INCLUDE_
#define _daeErrors_INCLUDE_


// fatal conditons (generated by m4)



//
// messages
//

// fatal messages
#define usage 1000

// error messages




























// warnings





// error conditions (generated by m4)



//
// messages
//

// fatal messages


// error messages
#define nameClash 2000
#define unsupportedFeature 2001
#define undefinedModel 2002
#define undefinedDomain 2003
#define undefinedFunction 2004
#define undefinedPredicate 2005
#define undefinedVariable 2006
#define undefinedObject 2007
#define undefinedType 2008
#define incompTypeEquality 2009
#define incompTypePredicate 2010
#define incompTypeFunction 2011
#define incompTypeAssignment 2012
#define probabilitySum 2013
#define wrongPackageName 2014
#define invalidSubscript 2015
#define invalidLValue 2016
#define invalidRValue 2017
#define invalidInternalFunction 2018
#define badRangeLimits 2019
#define featureInModel 2020
#define undefinedFunPred 2021
#define invalidInternalPredicate 2022
#define incompTypeInSum 2023
#define incompTypeInConditional 2024
#define badCostTerm 2025
#define badStarTerm 2026

// warnings





// warning conditions (generated by m4)



//
// messages
//

// fatal messages


// error messages




























// warnings
#define featureInModelWarning 3000
#define probabilitySumWarning 3001
#define unableCheckInteger 3002



// fatal call 
#define fatal(i)                     _fatal( __LINE__, __FILE__, (i) )


extern int  numErrors;

extern void _fatal( int, const char *, int );
extern void error( int, ... );
extern void warning( int, ... );

void insertError( const char * );
void insertFmtError( const char *, ... );
void printErrors( FILE *file );


#endif /* _daeErrors_INCLUDE_ */
